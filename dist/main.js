/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n;// CONCATENATED MODULE: ./src/MyCalendar.js\n\nclass MyCalendar {\n    constructor({ target, date, lang } = {}) {\n        this.target = target || '.my-calendar';\n        this.date = date || new Date();\n        this.lang = lang || 'de';\n    }\n    _month = {\n        de: ['Januar', 'Februar', 'MÃ¤rz', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember']\n    }\n\n    _weekDay = {\n        de: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donerstag', 'Freitag', 'Samstag', 'Sontag']\n    }\n\n    isLeapYear() {\n        let date = this.date;\n        let currentYear = date.getFullYear();\n        if ((currentYear % 4 === 0 || currentYear % 400 === 0) && currentYear % 100 !== 0) return true;\n        return false;\n    }\n\n    calendaWeek(date = this.date) {\n        let currentThursday = new Date(date.getTime() + (3 - ((date.getDay() + 6) % 7)) * 86400000);\n        let yearOfThursday = currentThursday.getFullYear();\n        let firstThursday = new Date(new Date(yearOfThursday, 0, 4).getTime() + (3 - ((new Date(yearOfThursday, 0, 4).getDay() + 6) % 7)) * 86400000);\n        return Math.floor(1 + 0.5 + (currentThursday.getTime() - firstThursday.getTime()) / 86400000 / 7);\n    }\n\n    uiContent() {\n        const content = document.createElement('div');\n        content.innerHTML = 'ich bin der Content';\n        return content;\n    }\n\n\n    calculateNewDate({ day = 0, month = 0, year = 0 } = {}) {\n        return new Date(this.date.getFullYear() + year, this.date.getMonth() + month, this.date.getDate() + day);\n    }\n\n    changeDate(newDate) {\n        this.date = newDate;\n        this.create();\n    }\n\n    uiChangeButton({ classname, txt, date } = {}) {\n        const button = document.createElement('button');\n        button.className = classname ?? 'btn';\n        button.innerHTML = txt ?? 'unKnowed';\n        button.onclick = () => this.changeDate(date);\n        return button;\n    }\n\n    uiHeaderControll(type) {\n\n        const possibleTypes = ['day', 'month', 'year'];\n        const DATE = this.date;\n        const wrap = document.createElement('div');\n        wrap.className = 'myc-head-control'\n        if (!possibleTypes.includes(type)) {\n            wrap.innerHTML = \"ERROR\";\n            console.warn('Wrong Type used');\n            return wrap;\n        }\n\n        const labelTxt = {\n            day: DATE.getDate(),\n            month: this._month[this.lang][DATE.getMonth()],\n            year: DATE.getFullYear()\n        }\n\n        const label = document.createElement('div');\n        label.innerHTML = labelTxt[type];\n        const btnNext = this.uiChangeButton({ txt: `Next ${type}`, date: this.calculateNewDate({ [type]: 1 }) });\n        btnNext.classList.add('btn-next');\n        const btnLast = this.uiChangeButton({ txt: `Last ${type}`, date: this.calculateNewDate({ [type]: -1 }) });\n        btnLast.classList.add('btn-last');\n\n        wrap.appendChild(btnLast)\n        wrap.appendChild(label)\n        wrap.appendChild(btnNext)\n\n        return wrap;\n    }\n\n    uiHeaderWeekday() {\n        const div = document.createElement('div');\n        div.innerHTML = this._weekDay[this.lang][this.date.getDay()];\n        div.classList.add('myc-header-weekday');\n        return div;\n    }\n\n    uiHeaderCalendarWeek() {\n        const div = document.createElement('div');\n        div.classList.add('myc-header-weeknumber');\n\n        const label = document.createElement('span');\n        label.innerHTML = 'Kalenderwoche';\n\n        const kw = document.createElement('span');\n        kw.innerHTML = this.calendaWeek(this.date);\n\n        div.appendChild(label);\n        div.appendChild(kw);\n\n        return div;\n    }\n\n    uiHeader() {\n        const header = document.createElement('div');\n        const headerMeta = document.createElement('div');\n\n        headerMeta.appendChild(this.uiHeaderWeekday());\n        headerMeta.appendChild(this.uiHeaderCalendarWeek());\n        headerMeta.classList.add('myc-header-meta');\n\n        header.appendChild(headerMeta);\n\n\n        const headControl = document.createElement('div');\n        headControl.classList.add('myc-header');\n\n        headControl.appendChild(this.uiHeaderControll('day'));\n        headControl.appendChild(this.uiHeaderControll('month'));\n        headControl.appendChild(this.uiHeaderControll('year'));\n\n        header.appendChild(headControl);\n\n        return header;\n    }\n\n\n\n\n    uiSelectYear() {\n        const select = document.createElement('div');\n        select.className = 'myc-selectbox-year'\n\n        const date = this.calculateNewDate({ year: -2 });\n        const startYear = date.getFullYear();\n\n        const startDecade = (currentYear) => {\n            return parseInt(currentYear / 10) * 10\n        };\n\n        //const year = this.calculateNewDate({year:-8});\n        const start = startDecade(this.date.getFullYear());\n        const end = start + 10;\n\n        const tenBack = document.createElement('div');\n        tenBack.innerHTML = '-10';\n        tenBack.className = 'myc-subselect';\n        tenBack.onclick = () => {\n            this.changeDate(this.calculateNewDate({ year: -10 }));\n        }\n        select.appendChild(tenBack);\n\n        for (let ii = start; ii < end; ii++) {\n\n            const subSelect = document.createElement('div');\n            const year = this.calculateNewDate({ year: ii - this.date.getFullYear() })\n\n            subSelect.className = this.date.getFullYear() === year.getFullYear()\n                ? 'myc-subselect-active'\n                : 'myc-subselect';\n\n            subSelect.innerHTML = year.getFullYear();\n            subSelect.onclick = () => {\n                this.changeDate(year);\n            }\n            select.appendChild(subSelect);\n\n        }\n\n        const tenForward = document.createElement('div');\n        tenForward.innerHTML = '+10';\n        tenForward.className = 'myc-subselect';\n        tenForward.onclick = () => {\n            this.changeDate(this.calculateNewDate({ year: 10 }));\n        }\n        select.appendChild(tenForward);\n\n        return select;\n    }\n\n    uiSelectMonth() {\n        const select = document.createElement('div');\n        select.className = 'myc-selectbox-month'\n        const months = this._month[this.lang];\n\n        months.forEach(month => {\n            const subSelect = document.createElement('div');\n\n\n            subSelect.className = month === this._month[this.lang][this.date.getMonth()]\n                ? 'myc-subselect-active'\n                : 'myc-subselect';\n\n            subSelect.innerHTML = month;\n            select.appendChild(subSelect);\n\n        });\n        return select;\n\n    }\n\n    create() {\n        const wrap = document.querySelector(this.target);\n        wrap.innerHTML = null;\n\n        // Header\n        const header = this.uiHeader();\n        const selectYear = this.uiSelectYear();\n        const selectMonth = this.uiSelectMonth();\n\n        // Content\n        const content = this.uiContent();\n\n\n\n        // Build the calendar\n        wrap.appendChild(header);\n        wrap.appendChild(selectYear);\n        wrap.appendChild(selectMonth);\n        wrap.appendChild(content);\n\n\n        // End of Creation\n    }\n}\n\n\n;// CONCATENATED MODULE: ./src/index.js\n\nconst calendar = new MyCalendar;\n\ncalendar.create();\n\n//# sourceURL=webpack://mycalendar/./src/index.js_+_1_modules?")}},__webpack_require__={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},__webpack_exports__={};__webpack_modules__["./src/index.js"](0,__webpack_exports__,__webpack_require__)})();